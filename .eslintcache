[{"E:\\devine\\hdj-boards\\src\\index.tsx":"1","E:\\devine\\hdj-boards\\src\\App.tsx":"2","E:\\devine\\hdj-boards\\src\\store\\index.ts":"3","E:\\devine\\hdj-boards\\src\\store\\board\\reducers.ts":"4","E:\\devine\\hdj-boards\\src\\store\\post\\reducers.ts":"5","E:\\devine\\hdj-boards\\src\\store\\board\\types.ts":"6","E:\\devine\\hdj-boards\\src\\store\\post\\types.ts":"7"},{"size":989,"mtime":1610789343593,"results":"8","hashOfConfig":"9"},{"size":556,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":294,"mtime":1610788954374,"results":"11","hashOfConfig":"9"},{"size":2179,"mtime":1610787642774,"results":"12","hashOfConfig":"9"},{"size":641,"mtime":1610787624732,"results":"13","hashOfConfig":"9"},{"size":618,"mtime":1610787346105,"results":"14","hashOfConfig":"9"},{"size":684,"mtime":1610787475194,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1l16lds",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\devine\\hdj-boards\\src\\index.tsx",["30","31"],"E:\\devine\\hdj-boards\\src\\App.tsx",["32"],"E:\\devine\\hdj-boards\\src\\store\\index.ts",[],"E:\\devine\\hdj-boards\\src\\store\\board\\reducers.ts",[],"E:\\devine\\hdj-boards\\src\\store\\post\\reducers.ts",[],"E:\\devine\\hdj-boards\\src\\store\\board\\types.ts",[],"E:\\devine\\hdj-boards\\src\\store\\post\\types.ts",[],{"ruleId":"33","severity":1,"message":"34","line":7,"column":53,"nodeType":"35","messageId":"36","endLine":7,"endColumn":56,"suggestions":"37"},{"ruleId":"33","severity":1,"message":"34","line":7,"column":96,"nodeType":"35","messageId":"36","endLine":7,"endColumn":99,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":1,"nodeType":"41","messageId":"42","endLine":5,"endColumn":15},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["43","44"],["45","46"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType",{"messageId":"47","fix":"48","desc":"49"},{"messageId":"50","fix":"51","desc":"52"},{"messageId":"47","fix":"53","desc":"49"},{"messageId":"50","fix":"54","desc":"52"},"suggestUnknown",{"range":"55","text":"56"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"55","text":"57"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"58","text":"56"},{"range":"58","text":"57"},[213,216],"unknown","never",[256,259]]